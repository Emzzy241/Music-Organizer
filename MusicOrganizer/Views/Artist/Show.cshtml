<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Music Organizer</title>
    <link 
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" 
      rel="stylesheet" 
      integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" 
      crossorigin="anonymous">
  </head>
  <body>
   <style>
    body {
      background-color: #f8f9fa;
    }
    .container {
      margin-top: 50px;
      text-align: center;
    }
    .cool-color {
      color: #007bff;
    }
    .btn-primary {
      background-color: #007bff;
      border-color: #007bff;
    }
    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }
    marquee{
        text-align: center;
    }
    *{
        text-decoration: none;
        list-style: none;
    }
  </style>

    <div class="container">

     <marquee scrollamount="-5" width="100%" loop="10000">
            <h1 class="cool-color">Music Organizer</h1>
            <p>Created by <b>Dynasty</b> | You can create Artists and place them under a record |  </p>
            
        </marquee>

        <h1>Artist Details: </h1>

        <h2>Artist name is: @Model["artistKey"].ArtistName</h2>
        @*<h3>Destination: @Model["newObjKey"].Destination</h3> *@

        <a class="btn btn-primary" href='/records/@Model["record"].RecordId/artists/new'>Add another Artist</a>
        <a class="btn btn-primary" href='/records/@Model["record"].RecordId'>View all Artists</a>

        @*/*
        Because our model data resides in a Dictionary named model, we use square bracket notation to access the two objects. We also add a line detailing which Category this Item belongs to.
        */*@
    </div class="container">

  </body>
</html>